<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cjy.lamplight.dao.OrderDao">

	<!-- public Order getOrder(int id); -->
	<select id="getOrder" resultType="Order">
		SELECT *
		FROM order
		WHERE id
		= #{id}
	</select>
	<!-- public Order getForPrintOrder(@Param("id") int id); -->
	<select id="getForPrintOrder" resultType="Order">
		SELECT A.*,
		IFNULL(M.nickname, "탈퇴회원") AS extra__writer
		FROM order AS A
		LEFT JOIN
		`client` AS M
		ON A.clientId = M.id
		WHERE A.id = #{id}
	</select>

	<!-- public List<Order> getOrders(@Param("searchKeywordType") String 
		searchKeywordType, @Param("searchKeyword") String searchKeyword); -->
	<select id="orders" resultType="Order">
		SELECT *
		FROM order
		WHERE 1
		<if test="searchKeywordType == 'title'">
			AND title LIKE CONCAT('%', #{searchKeyword}, '%')
		</if>
		<if test="searchKeywordType == 'body'">
			AND `body` LIKE CONCAT('%', #{searchKeyword}, '%')
		</if>
		<if test="searchKeywordType == 'titleAndBody'">
			AND (title LIKE CONCAT('%', #{searchKeyword}, '%') OR
			`body` LIKE CONCAT('%', #{searchKeyword}, '%'))
		</if>
		ORDER BY id DESC
	</select>

	<!-- public List<Order> getForPrintOrders(@Param("boardId") int boardId, 
		@Param("searchKeywordType") String searchKeywordType, @Param("searchKeyword") 
		String searchKeyword, @Param("limitStart") int limitStart, @Param("limitTake") 
		int limitTake); -->
	<select id="getForPrintOrders" resultType="Order">
		SELECT A.*,
		IFNULL(M.nickname, "탈퇴회원") AS extra__writer,
		B.name AS extra__boardName
		FROM order AS A
		LEFT JOIN `client` AS M
		ON A.clientId = M.id
		LEFT JOIN `board` AS B
		ON A.boardId = B.id
		WHERE 1
		<if test="boardId != null">
			AND A.boardId = #{boardId}
		</if>
		<if test="searchKeywordType == 'title'">
			AND A.title LIKE CONCAT('%', #{searchKeyword}, '%')
		</if>
		<if test="searchKeywordType == 'body'">
			AND A.`body` LIKE CONCAT('%', #{searchKeyword}, '%')
		</if>
		<if test="searchKeywordType == 'titleAndBody'">
			AND (A.title LIKE CONCAT('%', #{searchKeyword}, '%') OR
			A.`body` LIKE CONCAT('%', #{searchKeyword}, '%'))
		</if>
		ORDER BY A.id DESC
		<if test="limitStart != null and limitTake != null">
			LIMIT #{limitStart}, #{limitTake}
		</if>
	</select>

	<!-- public void addOrder(String title, String body); -->
	<insert id="addOrder" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO order
		<set> <!-- SET 대신 set으로 감싸주는 것이 관례 -->
			regDate = NOW(),
			updateDate = NOW(),
			boardId = #{boardId},
			clientId = #{clientId},
			title = #{title},
			`body` = #{body}
		</set>
	</insert>

	<!-- public void deleteOrder(int id); -->
	<delete id="deleteOrder">
		DELETE FROM order
		WHERE id = #{id}
	</delete>

	<!-- public void modifyOrder(int id, String title, String body); -->
	<update id="modifyOrder">
		UPDATE order
		<set>  <!-- set으로 감싸는 이유? 만약 set안의 내용이 채워지지 않았을 경우 다음 단계 진행 안하고 멈춤(쿼리 오류 방지) -->
			<if test="title != null or body != null">
				updateDate = NOW(),
			</if>
			<if test="title != null">
				title = #{title},
			</if>
			<if test="body != null">
				`body` = #{body}
			</if>
		</set>
		WHERE id = #{id}
	</update>

	<!-- public Board getBoard(@Param("id")int id); -->
	<select id="getBoard" resultType="Board">
		SELECT *
		FROM board
		WHERE id = #{id}
	</select>
	
	<!-- public ResultData addReply(Map<String, Object> param); -->
	<insert id="addReply" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO reply
		SET regDate = NOW(),
		updateDate = NOW(),
		orderId = #{orderId},
		`body` = #{body},
		clientId = #{clientId}
	</insert>

</mapper>